※ 230519 객체지향언어 부분 복습

# 객체지향 언어란?
프로그램을 다수의 객체로 만들고 객체끼리 서로 상호작용하도록 만드는 프로그래밍 언어를 말한다.

# 객체지향 언어의 특징

1. 캡슐화, 다형성, 상속...
2. 코드 재사용성이 높고 유지보수가 쉽다.
3. 신뢰성 높은 프로그래밍 
...

# 객체, 클래스, 인스턴스, 메서드

[1] 객체 : 물리적으로 존재하거나 추상적으로 생각할 수 있는 것 중에서 정의 가능하거나 식별 가능한 것들을 말한다.
(예)
- 물리적인 것 : 컴퓨터, 자동차, 학생, 회원...
- 추상적인 것 : 주문, 생산, 수강, 결제...

* 객체의 구성요소 : 속성 + 기능
- 속성 : 변수, 특성, 필드, 상태
- 기능 : 동작, 메서드, 함수

(예) 객체를 신용카드라고 하면 ...
- 속성 : 사용자 이름, 카드 번호, 카드 유효기간 ...
- 기능 : 결제 기능, 포인트 적립 기능, 대출 기능...

[2]. 클래스 : 객체를 만들기 위한 설계도이며 객체가 가지는 속성(=필드)과 기능(=메소드)으 로 이루어져 있다.

public class 객체명
{
	// 필드 : 객체의 데이터가 저장되는 곳
	// 생성자 : 객체를 선언하고 값을 최초로 할당하는 곳
	// 메소드 : 객체의 동작 또는 데이터의 조작이 이루어지는 곳
}

[3]. 인스턴스 : 클래스로부터 만들어진 객체를 말한다. 실제 메모리에 할당되어 사용되며 각각 고유의 특성을 가지고 독립적으로 존재한다.	
* 클래스명 인스턴스명 =  new연산자 클래스명();

*** 객체와 인스턴스에 의미? 
- 객체 : 모든 인스턴스를 대표하는 포괄적 의미 (예) 자동차
- 인스턴스 : 어떤 클래스로부터 만들어진 것인지 강조하는 구체적 의미 (예) 자동차명, 제조회사, 가격, 색상, 배기량 ... 

[4]. 메서드 : 어떤 특정 작업을 수행하기 위한 명령문의 집합이다. 

void method() //선언부에는 이름
{
	// 구현부
	void 일때는 return이 생략 가능하다.
}

